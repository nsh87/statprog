Lecture 06b: Interfacing to databases
========================================================
author: Bob Horton
date: 3/4/2015

Doctors and Patients: many-to-many
========================================================

```{r dr_pt_tables, echo=FALSE}
library("sqldf")
patient <- data.frame(id=1:5,
    name=c("Alt", "Box", "Cox", "Dew", "Ely"),
	sex=c("F", "M", "M", "F", "F")
)

doctor <- data.frame(id=1:4, 
    md=c("Kane", "Lake", "Mayo", "Nash"),
	dept=c("GI", "ID", "AI", "OB")
)

patient_doctor <- data.frame(
	pt=c(1,1,2,3,4,4), 
	dr=c(2,4,1,1,4,3)
)
```
```{r dr_pt_table_display1, echo=FALSE, results="asis"}
cat("<h2>patient</h2>")
kable(patient)
cat("<h2>doctor</h2>")
kable(doctor)
```

***

```{r dr_pt_table_display2, echo=FALSE, results="asis"}
cat("<h2>patient-doctor</h2>")
kable(patient_doctor)
```

Projection: SQL
========================================================
```{r projection_sql, echo=FALSE}
sql <- "SELECT name FROM patient"
cat(sql)
sqldf(sql)
```

Projection: R
========================================================
```{r projection_r}
patient['name']
patient$name  # patient[['name']]; patient[,'name']
```

Selection: SQL
========================================================
```{r selection_sql, echo=FALSE}
sql <- "SELECT * FROM patient WHERE sex = 'F'"
cat(sql)
sqldf(sql)
```

Selection: R
========================================================
```{r selection_r}
patient[patient$sex=='F',]
```

Left Outer Join: SQL
========================================================
```{r left_outer_join_sql, echo=FALSE}
sql <- "SELECT p.id as pt, dr, md, dept, name, sex 
FROM patient p 
LEFT OUTER JOIN patient_doctor pd ON p.id=pd.pt
LEFT OUTER JOIN doctor d ON pd.dr=d.id"
cat(sql)
sqldf(sql)
```

One-sided Outer Join: R
========================================================
```{r left_outer_join_r}
merge(
    merge(patient_doctor, doctor,
          by.x='dr', by.y='id', all.x=TRUE),
    patient, by.x='pt', by.y='id', all.y=TRUE)

```

Aggregation: SQL
========================================================
```{r aggregation_sql}
sql <- "SELECT dr, count(*) as num_pt FROM patient_doctor GROUP BY dr"
sqldf(sql)
```

Aggregation: dplyr
========================================================
```{r aggregation_dplyr}
library('dplyr')
patient_doctor %>% group_by(dr) %>% summarize(num_pt=n()) %>% as.data.frame()
```

Aggregation: R
========================================================
```{r aggregate}
aggregate(patient_doctor['pt'], by=list(dr=patient_doctor$dr), length)
table(patient_doctor$dr)
```
